Python types:
- Number:
    1. integer => 1, 5, 10  (use int() function to convert type to number int)
    2. float => 1.1, 5.8, 10.56  (use float() function to convert type to number float)
    easy to read way to write number: num = 1_000_000
- Boolean
- Sring
- Dictionaries
- Objects
- Tuple
- Set

#transform string into number
int('1')
float('1.1')

#operators
1. is => check if that is the same object(not value) '1 is 1'
2. in => check if certain value is inside iterable
3. not => the same as ! => 2 is not 1
4. and => combine multiple conditions
5. or => combine multiple conditions 

#functions
1. def my_func(first_arg):
       return first_arg

2. def my_func(first_arg='Default value'):
       return first_arg

3. def my_func(first_arg, second_arg):
       return [first_arg, second_arg]
   my_func(second_arg=1, first_arg='2');

#loops
1. for: (go through elements in the iterable list)
       for block in block_list:
              print(block)
2. while: (execute code while condition is truthy)
       while a == b:
              print('Hello')
*you can add else: block for loops - both while and for

#conditionals
1. if-else:
       if my_value < 15:
              print('First condition!')
       elif my_value < 12:
              print('Second condition!')
       else:
              print('Default condition!')

#iterables 
1. List - [] - mutable, ordered list, duplicates allowed, mostly only one type
2. Set - {} - mutable, unordered list, no duplicates allowed, mostly only one type
3. Tuple - () - immutable, ordered list, duplicates allowed, often mixed types
4. Dictionary - { key: value } - mutable, unordered map, no duplicate keys, often mixed types

#comprehensions
1. list comprehension
numbers = [1, 2, 3]
doubled_numbers = [(el * 2) for el in numbers] - go through all elements in an array and change iterable
2. dict comprehension
user_data = [('age', 29), ('weight', 55), ('height', 160)]
user = { key: value for (key, value) in user_data } - create a dict out of list of tuples
3. list comprehension with conditionals
numbers = [1, 2, 3, 4]
doubled_numbers = [(el * 2) for el in numbers if el%2 == 0] => create new list only out of even numbers from the original list
